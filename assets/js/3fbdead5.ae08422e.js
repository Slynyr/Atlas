"use strict";(self.webpackChunktej_resources=self.webpackChunktej_resources||[]).push([[69],{3159:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>g,frontMatter:()=>o,metadata:()=>u,toc:()=>d});var r=n(4848),a=n(8453),i=n(1470),l=n(9365);const o={sidebar_position:2},s=void 0,u={id:"Labs/Analog IO",title:"Analog IO",description:"Overview",source:"@site/docs/Labs/Analog IO.md",sourceDirName:"Labs",slug:"/Labs/Analog IO",permalink:"/Atlas/docs/Labs/Analog IO",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Labs/Analog IO.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Basic IO",permalink:"/Atlas/docs/Labs/Basic IO"},next:{title:"RemoteXY",permalink:"/Atlas/docs/Labs/RemoteXY"}},c={},d=[{value:"Overview",id:"overview",level:2},{value:"Objectives",id:"objectives",level:2},{value:"Wiring Diagram",id:"wiring-diagram",level:2},{value:"Code Solutions",id:"code-solutions",level:2}];function h(e){const t={admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(t.p,{children:"This lab is a simple introduction to reading and outputting analog signals over the ESP32/Arduino pins. Please note that if you use an Arduino, you would have to use analog specific pins. If you want to challenge yourself, try completing the objectives below in order before referring to the example code!"}),"\n",(0,r.jsx)(t.h2,{id:"objectives",children:"Objectives"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Read analog values from photoresistor"}),"\n",(0,r.jsx)(t.li,{children:"Turn on LED or print something whenever the light level drops below a threshold"}),"\n",(0,r.jsx)(t.li,{children:"Add a delay so that the light level has to be below a threshold for a certain amount of time before the LED is turned on \u2b50\ufe0e"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"wiring-diagram",children:"Wiring Diagram"}),"\n",(0,r.jsx)("p",{align:"center",children:(0,r.jsx)("img",{src:"/Atlas/img/LAB-AnalogIO.png",alt:"PlatformIO Banner"})}),"\n",(0,r.jsx)(t.h2,{id:"code-solutions",children:"Code Solutions"}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsx)(l.A,{value:"basic",label:"Basic",default:!0,children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-cpp",children:"#include <Arduino.h>\r\n\r\n#define PHOTORESISTOR_PIN D25   // Defining photoresistor pin number\r\n#define LED_PIN 15              // Defining LED pin number\r\n\r\nlong minLightLevel = 1000;      // Defining low light threshold\r\n\r\nvoid setup() {\r\n    Serial.begin(115200);       // Initializing Serial with a baud rate of 115200\r\n    pinMode(LED_PIN, OUTPUT);   // Setting pin mode of LED pin to output\r\n}\r\n\r\nvoid loop() {\r\n    long lightLevel = analogRead(PHOTORESISTOR_PIN);    // Reading photoresistor pin as analog. This will return a numerical value\r\n    Serial.println(lightLevel);                         // Printing light level to serial \r\n\r\n    // Checking if light level is below threshold\r\n    if (lightLevel < minLightLevel) { \r\n        digitalWrite(LED_PIN, HIGH);    // Setting LED state to on\r\n    } else {\r\n        digitalWrite(LED_PIN, LOW);     // Setting LED state to off\r\n    }\r\n}\n"})})}),(0,r.jsx)(l.A,{value:"advanced \u2b50\ufe0e",label:"Advanced",default:!0,children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-cpp",children:"#include <Arduino.h>\r\n\r\n#define PHOTORESISTOR_PIN D25               // Defining photoresistor pin number\r\n#define LED_PIN 15                          // Defining LED pin number\r\n\r\nlong minLightLevel = 1000;                  // Defining low light threshold\r\nlong lowLightTimeout = 5000;                // Defining LED timeout time\r\nlong lastTimeAboveThreshold = millis();     // Creating variable for storing timestamp for last time the photoresistor was above the threshold\r\nbool ledState = false;                      // Creating variable for storing LED state\r\n\r\nvoid manageLED();\r\n\r\nvoid setup() {\r\n    Serial.begin(115200);                   // Initializing Serial at 115200 MHz\r\n    pinMode(LED_PIN, OUTPUT);               // Setting pin mode of LED pin to output\r\n}\r\n\r\nvoid loop() {\r\n    manageLED();\r\n}\r\n\r\nvoid manageLED() {\r\n    long lightLevel = analogRead(PHOTORESISTOR_PIN);    // Reading photoresistor pin as analog. This will return a numerical value\r\n    bool prevLEDState = ledState;                       // Saving previous led state in temporary variable\r\n\r\n    // Checking if light level is above threshold\r\n    if (lightLevel > minLightLevel) {\r\n        lastTimeAboveThreshold = millis();              // Updating last time above threshold timestamp\r\n        ledState = true;                                // Setting LED state to true\r\n    \r\n    // Checking if its been longer than timeout threshold since the light level was last above threshold. Also checking that the LED state is true.\r\n    } else if (((millis() - lastTimeAboveThreshold) > lowLightTimeout) && ledState) {\r\n        ledState = false;                               // Setting LED state to false \r\n    }\r\n\r\n    // Checking if LED state has changed since last tick\r\n    if (prevLEDState != ledState) {\r\n        digitalWrite(LED_PIN, ledState ? HIGH : LOW);   // Setting LED to LED state\r\n    }\r\n}\n"})})})]}),"\n",(0,r.jsx)(t.admonition,{type:"note",children:(0,r.jsx)(t.p,{children:"The basic example code does not include a solution for the 3rd objective"})})]})}function g(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},9365:(e,t,n)=>{n.d(t,{A:()=>l});n(6540);var r=n(4164);const a={tabItem:"tabItem_Ymn6"};var i=n(4848);function l(e){let{children:t,hidden:n,className:l}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,r.A)(a.tabItem,l),hidden:n,children:t})}},1470:(e,t,n)=>{n.d(t,{A:()=>E});var r=n(6540),a=n(4164),i=n(3104),l=n(6347),o=n(205),s=n(7485),u=n(1682),c=n(9466);function d(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??function(e){return d(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:a}}=e;return{value:t,label:n,attributes:r,default:a}}))}(n);return function(e){const t=(0,u.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function g(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function p(e){let{queryString:t=!1,groupId:n}=e;const a=(0,l.W6)(),i=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s.aZ)(i),(0,r.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(a.location.search);t.set(i,e),a.replace({...a.location,search:t.toString()})}),[i,a])]}function m(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,i=h(e),[l,s]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!g({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:i}))),[u,d]=p({queryString:n,groupId:a}),[m,v]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,i]=(0,c.Dv)(n);return[a,(0,r.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:a}),f=(()=>{const e=u??m;return g({value:e,tabValues:i})?e:null})();(0,o.A)((()=>{f&&s(f)}),[f]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!g({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);s(e),d(e),v(e)}),[d,v,i]),tabValues:i}}var v=n(2303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=n(4848);function L(e){let{className:t,block:n,selectedValue:r,selectValue:l,tabValues:o}=e;const s=[],{blockElementScrollPositionUntilNextRender:u}=(0,i.a_)(),c=e=>{const t=e.currentTarget,n=s.indexOf(t),a=o[n].value;a!==r&&(u(t),l(a))},d=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=s.indexOf(e.currentTarget)+1;t=s[n]??s[0];break}case"ArrowLeft":{const n=s.indexOf(e.currentTarget)-1;t=s[n]??s[s.length-1];break}}t?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":n},t),children:o.map((e=>{let{value:t,label:n,attributes:i}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,ref:e=>s.push(e),onKeyDown:d,onClick:c,...i,className:(0,a.A)("tabs__item",f.tabItem,i?.className,{"tabs__item--active":r===t}),children:n??t},t)}))})}function I(e){let{lazy:t,children:n,selectedValue:a}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:i.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a})))})}function D(e){const t=m(e);return(0,b.jsxs)("div",{className:(0,a.A)("tabs-container",f.tabList),children:[(0,b.jsx)(L,{...t,...e}),(0,b.jsx)(I,{...t,...e})]})}function E(e){const t=(0,v.A)();return(0,b.jsx)(D,{...e,children:d(e.children)},String(t))}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>o});var r=n(6540);const a={},i=r.createContext(a);function l(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);