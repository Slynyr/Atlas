"use strict";(self.webpackChunktej_resources=self.webpackChunktej_resources||[]).push([[940],{4453:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>u,toc:()=>d});var r=t(4848),i=t(8453),a=t(1470),s=t(9365);const o={sidebar_position:1},l=void 0,u={id:"Labs/Basic IO",title:"Basic IO",description:"Overview",source:"@site/docs/Labs/Basic IO.md",sourceDirName:"Labs",slug:"/Labs/Basic IO",permalink:"/Atlas/docs/Labs/Basic IO",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Labs/Basic IO.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Troubleshooting",permalink:"/Atlas/docs/PlatformIO/Troubleshooting"},next:{title:"Analog IO",permalink:"/Atlas/docs/Labs/Analog IO"}},c={},d=[{value:"Overview",id:"overview",level:2},{value:"Objectives",id:"objectives",level:2},{value:"Wiring Diagram",id:"wiring-diagram",level:2},{value:"Code Solutions",id:"code-solutions",level:2}];function p(e){const n={admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"This lab is a simple introduction to programming pin inputs and outputs for the  ESP32/Arduino. If you want to challenge yourself, try completing the objectives below in order before referring to the example code!"}),"\n",(0,r.jsx)(n.h2,{id:"objectives",children:"Objectives"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Turn on LED"}),"\n",(0,r.jsx)(n.li,{children:"Blink LED every 1 second"}),"\n",(0,r.jsx)(n.li,{children:"Make LED only turn on when holding a button pressed (Using on-board button)\u2b50\ufe0e"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"wiring-diagram",children:"Wiring Diagram"}),"\n",(0,r.jsx)("p",{align:"center",children:(0,r.jsx)("img",{src:"/Atlas/img/LAB-BasicIO.png",alt:"PlatformIO Banner"})}),"\n",(0,r.jsx)(n.h2,{id:"code-solutions",children:"Code Solutions"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(s.A,{value:"basic",label:"Basic",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"#include <Arduino.h>\r\n\r\n#define LED_PIN 25       // Defining LED pin number\r\n#define BUTTON_PIN 2    // Defining button pin number\r\n\r\nvoid setup() {\r\n    pinMode(LED_PIN, OUTPUT);           // Initializing LED pin as an output \r\n    pinMode(BUTTON_PIN, INPUT_PULLUP);  // Initializing button pin as an input\r\n}\r\n\r\nvoid loop() {\r\n    // Checking if button is pressed\r\n    if (digitalRead(BUTTON_PIN)) {\r\n        digitalWrite(LED_PIN, HIGH);    // Turning LED on\r\n        delay(1000);                    // 1000ms delay\r\n        digitalWrite(LED_PIN, LOW);     // Turning LED off \r\n        delay(1000);                    // 1000ms delay\r\n    }\r\n}\n"})})}),(0,r.jsx)(s.A,{value:"advanced",label:"Advanced",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:'#include <Arduino.h>\r\n\r\n#define LED_PIN 25           // Defining LED pin number\r\n#define BUTTON_PIN 2        // Defining button pin number\r\n\r\nbool isLEDOn = false;       // Creating variable with LED for representing the current LED state\r\nlong ledSwitchDelay = 1000; // variable representing the delay between state switches \r\nlong lastSwitch = millis(); // variable representing the last timestamp at which the LED state was switched\r\n\r\nvoid updateLEDState();      // Declaring update method from below\r\n\r\nvoid setup() {\r\n    pinMode(LED_PIN, OUTPUT);       // Initializing LED pin as an output \r\n    pinMode(BUTTON_PIN, INPUT_PULLUP); // Initializing button pin as an input \r\n}\r\n\r\nvoid loop() {\r\n    updateLEDState(); // Calling update method\r\n}\r\n\r\nvoid updateLEDState() {\r\n    // Checking if button is pressed\r\n    if (digitalRead(BUTTON_PIN)) {\r\n        if ((millis() - lastSwitch) > ledSwitchDelay) {     // Checking if it has been longer than ledSwitchDelay (1000ms)\r\n            lastSwitch = millis();                          // Setting last switch time to current time\r\n            isLEDOn = !isLEDOn;                             // Flipping LED state (! represents "not")\r\n            digitalWrite(LED_PIN, isLEDOn ? HIGH : LOW);    // Turning LED on/off depending on LED state\r\n        }\r\n    } else {\r\n        // Disabling LED if it\'s on and button is not being pressed\r\n        if (isLEDOn) {\r\n            isLEDOn = false;            // Setting LED state to off\r\n            digitalWrite(LED_PIN, LOW); // Turning LED off\r\n        }\r\n    }\r\n}\n'})})})]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"One of the major differences between the basic and advanced programming solution is the fact that the advanced solution is non-blocking. Since we are not triggering a delay in the main loop, other components of your script/program can continue to run while waiting for the next LED state switch"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},9365:(e,n,t)=>{t.d(n,{A:()=>s});t(6540);var r=t(4164);const i={tabItem:"tabItem_Ymn6"};var a=t(4848);function s(e){let{children:n,hidden:t,className:s}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,r.A)(i.tabItem,s),hidden:t,children:n})}},1470:(e,n,t)=>{t.d(n,{A:()=>w});var r=t(6540),i=t(4164),a=t(3104),s=t(6347),o=t(205),l=t(7485),u=t(1682),c=t(9466);function d(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:i}}=e;return{value:n,label:t,attributes:r,default:i}}))}(t);return function(e){const n=(0,u.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function b(e){let{queryString:n=!1,groupId:t}=e;const i=(0,s.W6)(),a=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(a),(0,r.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(i.location.search);n.set(a,e),i.replace({...i.location,search:n.toString()})}),[a,i])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,a=p(e),[s,l]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:a}))),[u,d]=b({queryString:t,groupId:i}),[f,m]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,a]=(0,c.Dv)(t);return[i,(0,r.useCallback)((e=>{t&&a.set(e)}),[t,a])]}({groupId:i}),g=(()=>{const e=u??f;return h({value:e,tabValues:a})?e:null})();(0,o.A)((()=>{g&&l(g)}),[g]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!h({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),m(e)}),[d,m,a]),tabValues:a}}var m=t(2303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=t(4848);function L(e){let{className:n,block:t,selectedValue:r,selectValue:s,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:u}=(0,a.a_)(),c=e=>{const n=e.currentTarget,t=l.indexOf(n),i=o[t].value;i!==r&&(u(n),s(i))},d=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:a}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>l.push(e),onKeyDown:d,onClick:c,...a,className:(0,i.A)("tabs__item",g.tabItem,a?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function D(e){let{lazy:n,children:t,selectedValue:i}=e;const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===i));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function I(e){const n=f(e);return(0,v.jsxs)("div",{className:(0,i.A)("tabs-container",g.tabList),children:[(0,v.jsx)(L,{...n,...e}),(0,v.jsx)(D,{...n,...e})]})}function w(e){const n=(0,m.A)();return(0,v.jsx)(I,{...e,children:d(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var r=t(6540);const i={},a=r.createContext(i);function s(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);