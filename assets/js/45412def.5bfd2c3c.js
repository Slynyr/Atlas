"use strict";(self.webpackChunktej_resources=self.webpackChunktej_resources||[]).push([[864],{4355:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>u,toc:()=>d});var t=n(4848),i=n(8453),a=n(1470),o=n(9365);const s={sidebar_position:2},l=void 0,u={id:"Labs/Web Server Control",title:"Web Server Control",description:"Overview",source:"@site/docs/Labs/Web Server Control.md",sourceDirName:"Labs",slug:"/Labs/Web Server Control",permalink:"/Atlas/docs/Labs/Web Server Control",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Labs/Web Server Control.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"RemoteXY",permalink:"/Atlas/docs/Labs/RemoteXY"},next:{title:"Arduino Framework",permalink:"/Atlas/docs/Programming/Arduino Framework"}},c={},d=[{value:"Overview",id:"overview",level:2},{value:"Objectives",id:"objectives",level:2},{value:"Wiring Diagram",id:"wiring-diagram",level:2},{value:"Code Solutions",id:"code-solutions",level:2}];function h(e){const r={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(r.p,{children:"One neat feature that is enabled by the ESP32's ability to host and connect to WiFi networks is its support for web servers. This means that you can create your own webpages that allow you to interact with the device in some way or form hosted directly on the ESP32. This solution is far more accessible in comparison to RemoteXY as it allows users to utilize the device natively with no additional installations required."}),"\n",(0,t.jsx)(r.h2,{id:"objectives",children:"Objectives"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Host a basic HTML web server on the ESP32"}),"\n",(0,t.jsx)(r.li,{children:"Control an LED with a button on the HTML webpage"}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"wiring-diagram",children:"Wiring Diagram"}),"\n",(0,t.jsx)("p",{align:"center",children:(0,t.jsx)("img",{src:"/img/LAB-BasicIO.png",alt:"PlatformIO Banner"})}),"\n",(0,t.jsx)(r.h2,{id:"code-solutions",children:"Code Solutions"}),"\n",(0,t.jsxs)(a.A,{children:[(0,t.jsx)(o.A,{value:"main.cpp",label:"main.cpp",default:!0,children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-cpp",children:'#include <Arduino.h>\r\n#include <WiFi.h>\r\n#include "html.h"\r\n\r\n#define LED_PIN 5\r\n\r\nconst char* WIFI_SSID = "ESP32-WebServer";          // Defining WiFi password\r\nconst char* WIFI_PASSWORD = "SECUREPASSWORD123";    // Defining WiFi password\r\nconst int SERVER_PORT = 80;                         // Defining Web server Port\r\n\r\nWebServer server(SERVER_PORT);                      // Initializing web server on predetermined PORT \r\n\r\nvoid initializeWebServer() {\r\n    WiFi.softAP(WIFI_SSID, WIFI_PASSWORD);                                              // Starting WiFi access point\r\n    Serial.println("Access point started with the following IP: " + WiFi.softAPIP());   // Printing web server IP address\r\n    Serial.println("Webserver PORT: " + SERVER_PORT);                                   // Printing web server port\r\n\r\n    // Registering interaction\r\n    server.on("/", HTTP_GET, []() {\r\n        server.send(200, "text/plain", htmlPage);      // Serving HTML page\r\n    });\r\n\r\n    // Registering interaction\r\n    server.on("/toggle", HTTP_GET, []() {\r\n        digitalWrite(LED_PIN, !digitalRead(LED_PIN));   // Flipping LED state\r\n        server.send(200, "text/plain", "Toggled");      // Sending GET response\r\n    });\r\n\r\n    server.begin();             // Starting web server\r\n}\r\n\r\nvoid setup() {\r\n    Serial.begin(115200);       // Starting serial with a baud rate of 115200\r\n\r\n    pinMode(LED_PIN, OUTPUT);   // Setting pin mode of LED pin to output\r\n\r\n    initializeWebServer();      // Calling initialize web server method\r\n}\r\n\r\nvoid loop() {\r\n    server.handleClient();      // Running server handler\r\n}\n'})})}),(0,t.jsx)(o.A,{value:"html.h",label:"header.h",default:!0,children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:'#ifndef Html_h\r\n#define Html_h\r\n\r\nconst char* htmlPage =\r\n"<!DOCTYPE html>"\r\n"<html>"\r\n"<head>"\r\n"<title>ESP32 LED Toggle</title>"\r\n"<style>"\r\n"html, body {"\r\n    "height: 100%;"\r\n    "margin: 0;"\r\n    "display: flex;"\r\n    "justify-content: center;"\r\n    "align-items: center;"\r\n    "background-color: #121212;" \r\n"}"\r\n"button {"\r\n    "padding: 20px 40px;"\r\n    "font-size: 24px;"\r\n    "cursor: pointer;"\r\n    "text-align: center;"\r\n    "outline: none;"\r\n    "color: #fff;" \r\n    "background-color: #333333;" \r\n    "border: none;"\r\n    "border-radius: 15px;"\r\n    "box-shadow: 0 5px #666;" \r\n"}"\r\n"button:hover {"\r\n    "background-color: #555555;" \r\n"}"\r\n"button:active {"\r\n    "background-color: #555555;" \r\n    "box-shadow: 0 3px #444;" \r\n    "transform: translateY(4px);"\r\n"}"\r\n"</style>"\r\n"</head>"\r\n"<body>"\r\n"<button onclick=\\"toggleLED()\\">Toggle LED</button>"\r\n"<script>"\r\n"function toggleLED() {"\r\n    "var xhr = new XMLHttpRequest();"\r\n    "xhr.open(\'GET\', \'/toggle\', true);"\r\n    "xhr.send();"\r\n"}"\r\n"<\/script>"\r\n"</body>"\r\n"</html>";\r\n\r\n#endif\n'})})})]}),"\n",(0,t.jsx)(r.admonition,{type:"tip",children:(0,t.jsxs)(r.p,{children:["If you are writing HTML for an embedded web server, a lot of examples online just store the HTML code as a string as main.cpp. This can get very messy very quick. A neater way of going about it is storing the HTML code in a string variable within a header file (As shown in this example). If you are new to header files and find this confusing, refer to the ",(0,t.jsx)(r.a,{href:"/docs/Programming/Header%20Files",children:"header files section"})," in the programming chapter of this resource."]})})]})}function p(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},9365:(e,r,n)=>{n.d(r,{A:()=>o});n(6540);var t=n(4164);const i={tabItem:"tabItem_Ymn6"};var a=n(4848);function o(e){let{children:r,hidden:n,className:o}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,t.A)(i.tabItem,o),hidden:n,children:r})}},1470:(e,r,n)=>{n.d(r,{A:()=>y});var t=n(6540),i=n(4164),a=n(3104),o=n(6347),s=n(205),l=n(7485),u=n(1682),c=n(9466);function d(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:r,children:n}=e;return(0,t.useMemo)((()=>{const e=r??function(e){return d(e).map((e=>{let{props:{value:r,label:n,attributes:t,default:i}}=e;return{value:r,label:n,attributes:t,default:i}}))}(n);return function(e){const r=(0,u.X)(e,((e,r)=>e.value===r.value));if(r.length>0)throw new Error(`Docusaurus error: Duplicate values "${r.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[r,n])}function p(e){let{value:r,tabValues:n}=e;return n.some((e=>e.value===r))}function b(e){let{queryString:r=!1,groupId:n}=e;const i=(0,o.W6)(),a=function(e){let{queryString:r=!1,groupId:n}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:r,groupId:n});return[(0,l.aZ)(a),(0,t.useCallback)((e=>{if(!a)return;const r=new URLSearchParams(i.location.search);r.set(a,e),i.replace({...i.location,search:r.toString()})}),[a,i])]}function m(e){const{defaultValue:r,queryString:n=!1,groupId:i}=e,a=h(e),[o,l]=(0,t.useState)((()=>function(e){let{defaultValue:r,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!p({value:r,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}const t=n.find((e=>e.default))??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:r,tabValues:a}))),[u,d]=b({queryString:n,groupId:i}),[m,f]=function(e){let{groupId:r}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(r),[i,a]=(0,c.Dv)(n);return[i,(0,t.useCallback)((e=>{n&&a.set(e)}),[n,a])]}({groupId:i}),g=(()=>{const e=u??m;return p({value:e,tabValues:a})?e:null})();(0,s.A)((()=>{g&&l(g)}),[g]);return{selectedValue:o,selectValue:(0,t.useCallback)((e=>{if(!p({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),f(e)}),[d,f,a]),tabValues:a}}var f=n(2303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=n(4848);function w(e){let{className:r,block:n,selectedValue:t,selectValue:o,tabValues:s}=e;const l=[],{blockElementScrollPositionUntilNextRender:u}=(0,a.a_)(),c=e=>{const r=e.currentTarget,n=l.indexOf(r),i=s[n].value;i!==t&&(u(r),o(i))},d=e=>{let r=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=l.indexOf(e.currentTarget)+1;r=l[n]??l[0];break}case"ArrowLeft":{const n=l.indexOf(e.currentTarget)-1;r=l[n]??l[l.length-1];break}}r?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":n},r),children:s.map((e=>{let{value:r,label:n,attributes:a}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:t===r?0:-1,"aria-selected":t===r,ref:e=>l.push(e),onKeyDown:d,onClick:c,...a,className:(0,i.A)("tabs__item",g.tabItem,a?.className,{"tabs__item--active":t===r}),children:n??r},r)}))})}function x(e){let{lazy:r,children:n,selectedValue:i}=e;const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(r){const e=a.find((e=>e.props.value===i));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:a.map(((e,r)=>(0,t.cloneElement)(e,{key:r,hidden:e.props.value!==i})))})}function S(e){const r=m(e);return(0,v.jsxs)("div",{className:(0,i.A)("tabs-container",g.tabList),children:[(0,v.jsx)(w,{...r,...e}),(0,v.jsx)(x,{...r,...e})]})}function y(e){const r=(0,f.A)();return(0,v.jsx)(S,{...e,children:d(e.children)},String(r))}},8453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>s});var t=n(6540);const i={},a=t.createContext(i);function o(e){const r=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(a.Provider,{value:r},e.children)}}}]);